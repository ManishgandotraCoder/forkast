// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  orders    Order[]
  balances  Balance[]
}

model Order {
  id             Int      @id @default(autoincrement())
  userId         Int
  user           User     @relation(fields: [userId], references: [id])
  type           String   // 'buy' or 'sell'
  symbol         String   // e.g., 'BTC-USD', 'ETH-USD'
  price          Float
  quantity       Int
  filledQuantity Int      @default(0)
  status         String   @default("open") // open, filled, cancelled
  market         Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  trades         Trade[]  @relation("BuyOrder")
  tradesSell     Trade[]  @relation("SellOrder")
}

model Trade {
  id         Int     @id @default(autoincrement())
  buyOrderId Int?
  sellOrderId Int?
  buyOrder   Order?  @relation("BuyOrder", fields: [buyOrderId], references: [id])
  sellOrder  Order?  @relation("SellOrder", fields: [sellOrderId], references: [id])
  buyerUserId Int?
  sellerUserId Int?
  price      Float
  quantity   Int
  executedAt DateTime @default(now())
}

model Balance {
  id       Int    @id @default(autoincrement())
  userId   Int
  user     User   @relation(fields: [userId], references: [id])
  symbol   String
  amount   Float  @default(0)
  locked   Float  @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, symbol])
}
